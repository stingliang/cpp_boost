并发编程
==============

早期的C++中没有语言级别的并发支持，因为在C++诞生很久以后线程等用于并发操作的概念才出现（POSIX线程标准制定于1995年）。随着近年来多CPU、多内核计算机的大量出现，并发操作（不仅是多线程）已经成为软件开发的基本需求。新的C++标准提供了＜atomic＞＜thread＞等库，对并发编程提供了初步的支持，但仍未达到尽善尽美

作为C++标准库的补充，Boost实现了数个用于并发编程的库，它们是高度可用的，而且结构良好，无论从哪个方面来说它们都要强于其他非标准的第三方并发程序库

本章讨论Boost库中三个用于并发编程的组件

1. atomic
    它完全实现了C++标准定义的原子操作库
2. thread
    它兼容C++标准，为C++增加了可移植的线程处理能力
3. asio
    一个用于同步和异步IO操作的功能强大的库，它使用了前摄器模式，可以处理串口/网络通信，asio有望成为C++标准底层通信库


.. toctree::
    :maxdepth: 1

    atomic
    thread
    asio